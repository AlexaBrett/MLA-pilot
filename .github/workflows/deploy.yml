name: Deploy to AWS ECR

on:
  pull_request:
    types:
      - closed
    branches:
      - main
    paths:
      - "frontend/**"
      - "activity-tracking/**"
      - "authservice/**"
      - "analytics/**"

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    strategy:
      matrix:
        service:
          - name: Frontend
            dir: frontend
            repo: mla-fitnessapp-fe
          - name: Activity Tracking
            dir: activity-tracking
            repo: mla-fitnessapp-activity
          - name: AuthService
            dir: authservice
            repo: mla-fitnessapp-authservice
          - name: Analytics
            dir: analytics
            repo: mla-fitnessapp-analytics

    steps:
      - run: |
          echo The PR was successfully merged into main.

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR (${{ matrix.service.name }})
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ matrix.service.repo }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd ${{ matrix.service.dir }}
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
