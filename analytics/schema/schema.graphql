schema {
    query: Query
}

type Exercise {
  exerciseType: String!
  subcategory: String!
  totalDuration: Int!
  totalSets: Int!
  totalReps: Int!
  averageWeightLifted: Float!
}

type UserExerciseStats {
  username: String!
  exercises: [Exercise]!
}

type Preference {
  username: String!
  goal: String!
  fitnessLevel: String!
  availableTime: Int!
  workoutSchedule: [String]!
  equipment: [String]!
  limitations: [String]
  feedback: String
  routine: String
}

type Query {
  # Query to get aggregated exercise stats for all users
  getAllExerciseStats: [UserExerciseStats]!

  # Query to get all user preferences
  getAllPreferences: [Preference]!
}

input PreferenceInput {
  username: String!
  goal: String!
  fitnessLevel: String!
  availableTime: Int!
  workoutSchedule: [String]!
  equipment: [String]!
  limitations: [String]
  feedback: String
  routine: String
}

type Mutation {
  # Mutation to update user preferences
  updatePreferences(input: PreferenceInput): Preference
}
